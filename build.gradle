plugins {
    id 'java'
    id 'io.qameta.allure' version '2.11.2'
}

group = 'org.example'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
    implementation 'com.microsoft.playwright:playwright:1.41.2'
    implementation 'io.qameta.allure:allure-java-commons:2.27.0'
    testImplementation 'org.testng:testng:7.7.0'
}

test {
    useTestNG()
}

task parallelTest(type: Test) {
    useTestNG {
        suites 'src/test/resources/parallelTest.xml'.replace("/", File.separator)
    }
}

task deleteCompileFolders(type: Delete) {
    delete 'out'
    delete 'allure-results'
    delete 'build'
}

task createPomFile {
    doLast {
        file('temp-pom.xml').text = """
        <project xmlns="http://maven.apache.org/POM/4.0.0"
                 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
            <modelVersion>4.0.0</modelVersion>
            <groupId>com.example</groupId>
            <artifactId>temp-project</artifactId>
            <version>1.0-SNAPSHOT</version>

            <dependencies>
                <!-- Добавьте зависимость для Playwright -->
                <dependency>
                    <groupId>com.microsoft.playwright</groupId>
                    <artifactId>playwright</artifactId>
                    <version>1.41.2</version>
                </dependency>
            </dependencies>

            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>3.0.0</version>
                    </plugin>
                </plugins>
            </build>
        </project>
        """
    }
}

task executeMavenCommand(type: Exec) {
    dependsOn createPomFile
    workingDir '.'  // Директория, в которой будет выполняться команда (текущая директория проекта)
    executable 'mvn'  // Указываем, что команды будем выполнять через Maven (mvn)
    args 'exec:java', '-e', '-f', 'temp-pom.xml', '-Dexec.mainClass=com.microsoft.playwright.CLI', '-Dexec.args=install chrome'  // Аргументы команды
}

// Сделаем так, чтобы Maven команда выполнялась перед компиляцией Java кода
//compileJava.dependsOn executeMavenCommand

// Удаляем временный pom.xml после выполнения команды
executeMavenCommand.finalizedBy 'cleanUpPomFile'

task cleanUpPomFile {
    doLast {
        file('temp-pom.xml').delete()
    }
}
